#ifndef RBF_BNO055_DRIVER__BNO055_REG_H_
#define RBF_BNO055_DRIVER__BNO055_REG_H_

#include <stdint.h>



namespace rbf_bno055_driver
{

enum BNO055ChipID : uint8_t
{
  BNO_CHIP_ID = 0xA0,
};
enum BNO055RegisterCommand : uint8_t
{
  WRITE = 0,
  READ,
};

enum BNO055OperationMode : uint8_t
{
  CONFIG = 0X00,
  ACCONLY,
  MAGONLY,
  GYROONLY,
  ACCMAG,
  ACCGYRO,
  MAGGYRO,
  AMG,
  IMU,
  COMPASS,
  M4G,
  NDOF_FMC_OFF,
  NDOF,
};

enum BNO055PowerMode : uint8_t
{
  NORMAL = 0,
  LOW_POWER,
  SUSPEND,
};

enum BNO055MessageType : uint8_t
{
  REGISTER_COMMAND = 0xAA,
  READ_RESPONSE = 0xBB,
  RESPONSE_STATUS = 0xEE,
};

enum BNO055ConfigRegister : uint8_t
{
  ACC_CONFIG = 0x0D,
  MAG_CONFIG = 0x6D,
  GYR_CONFIG = 0x38,
  GYR_CONFIG_1 = 0x00,
};

enum BNO055Register : uint8_t
{
  CHIP_ID = 0x00,
  ACC_ID,
  MAG_ID,
  GYR_ID,
  SW_REV_ID_LSB,
  SW_REV_ID_MSB,
  BL_REV_ID,
  PAGE_ID,
  ACC_DATA_X_LSB,

  MAG_DATA_X_LSB = 0x0E,

  GYR_DATA_X_LSB = 0x14,

  QUA_DATA_W_LSB = 0x20,

  LIA_DATA_X_LSB = 0x28,

  TEMP = 0x34,
  CALIB_STAT = 0X35,
  ST_RESULT,
  INT_STA,
  SYS_CLK_STATUS,
  SYS_STATUS,
  SYS_ERR,
  UNIT_SEL,

  OPR_MODE = 0x3D,
  PWR_MODE,
  SYS_TRIGGER,
  TEMP_SOURCE,
  AXIS_MAP_CONFIG,
  AXIS_MAP_SIGN,

  ACCEL_OFFSET_X_LSB_ADDR = 0X55,
  ACCEL_OFFSET_X_MSB_ADDR = 0X56,
  ACCEL_OFFSET_Y_LSB_ADDR = 0X57,
  ACCEL_OFFSET_Y_MSB_ADDR = 0X58,
  ACCEL_OFFSET_Z_LSB_ADDR = 0X59,
  ACCEL_OFFSET_Z_MSB_ADDR = 0X5A,

  MAG_OFFSET_X_LSB_ADDR = 0X5B,
  MAG_OFFSET_X_MSB_ADDR = 0X5C,
  MAG_OFFSET_Y_LSB_ADDR = 0X5D,
  MAG_OFFSET_Y_MSB_ADDR = 0X5E,
  MAG_OFFSET_Z_LSB_ADDR = 0X5F,
  MAG_OFFSET_Z_MSB_ADDR = 0X60,

  /* Gyroscope Offset register s*/
  GYRO_OFFSET_X_LSB_ADDR = 0X61,
  GYRO_OFFSET_X_MSB_ADDR = 0X62,
  GYRO_OFFSET_Y_LSB_ADDR = 0X63,
  GYRO_OFFSET_Y_MSB_ADDR = 0X64,
  GYRO_OFFSET_Z_LSB_ADDR = 0X65,
  GYRO_OFFSET_Z_MSB_ADDR = 0X66,

  ACCEL_RADIUS_LSB_ADDR = 0X67,
  ACCEL_RADIUS_MSB_ADDR = 0X68,
  MAG_RADIUS_LSB_ADDR = 0X69,
  MAG_RADIUS_MSB_ADDR = 0X6A
};

enum BNO055ResponseStatus : uint8_t
{
  UNKNOWN = 0,
  WRITE_SUCCESS,
  READ_FAIL,
  WRITE_FAIL,
  REGMAP_INVALID_ADDRESS,
  REGMAP_WRITE_DISABLED,
  WRONG_START_BYTE,
  BUS_OVER_RUN_ERROR,
  MAX_LENGTH_ERROR,
  MIN_LENGTH_ERROR,
  RECEIVE_CHARACTER_TIMEOUT,
};

}  // namespace bno055_driver

#endif  // BNO055_DRIVER__BNO055_REG_H_
